# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: elk-logger
---
# RBAC authn and authz
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch-logging
  namespace: elk-logger
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch-logging
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: elk-logger
  name: elasticsearch-logging
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: elasticsearch-logging
  namespace: elk-logger
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch-logging
  apiGroup: ""
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: elk-logger-pv-nfs
#   labels:
#     type: elk-logger-pv-nfs
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 15Gi
#   accessModes:
#     - ReadWriteMany
#   nfs:
#     server: 192.168.0.109
#     path: "/mnt/nfs_share"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: elk-logger-pvc
#   namespace: elk-logger
# spec:
#   storageClassName: manual
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 15Gi       
---
# Elasticsearch deployment itself
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-logging
  namespace: elk-logger
  labels:
    k8s-app: elasticsearch-logging
    version: v6.2.4
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: elasticsearch-logging
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      k8s-app: elasticsearch-logging
      version: v6.2.4
  template:
    metadata:
      labels:
        k8s-app: elasticsearch-logging
        version: v6.2.4
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: elasticsearch-logging
      # volumes:
      # - name: elasticsearch-logging
      #   persistentVolumeClaim:
      #     claimName: elk-logger-pvc  
      containers:
      - image: k8s.gcr.io/elasticsearch:v6.2.4
        name: elasticsearch-logging
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        # - name: elasticsearch-logging
        #   mountPath: /data
        #   subPath: elk-logger-data
        env:
        - name: CLUSTER_NAME
          value: my-es
        - name: NUMBER_OF_MASTERS
          value: "1"
        - name: NODE_MASTER
          value: "true"  
        - name: MINIMUM_MASTER_NODES
          value: "1"      
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      # volumes:
      # - name: elasticsearch-logging
      #   emptyDir: {}
      # Elasticsearch requires vm.max_map_count to be at least 262144.
      # If your OS already sets up this number to a higher value, feel free
      # to remove this init container.
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-logging-init
        securityContext:
          privileged: true
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logging
  namespace: elk-logger
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Elasticsearch"
spec:
  type: NodePort
  ports:
  - port: 9200
    protocol: TCP
    targetPort: db
    nodePort: 31335
  selector:
    k8s-app: elasticsearch-logging

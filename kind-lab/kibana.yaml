# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: elk-kibana-pv-nfs
#   labels:
#     type: elk-kibana-pv-nfs
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 5Gi
#   accessModes:
#     - ReadWriteMany
#   nfs:
#     server: 192.168.0.109
#     path: "/mnt/nfs_share"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: elk-kibana-pvc
#   namespace: elk-logger
# spec:
#   storageClassName: manual
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 5Gi
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  namespace: elk-logger
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile  
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      # volumes:
      # - name: kibana-volume
        persistentVolumeClaim:
          claimName: elk-logger-pvc 
      containers:
      - name: kibana-logging
        image: docker.elastic.co/kibana/kibana-oss:6.2.4
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch-logging:9200
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
        # volumeMounts:
        # - name: kibana-volume
        #   mountPath: /usr/share/kibana
        #   subPath: elk-logger-data/kibana-data 
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-logging
  namespace: elk-logger
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Kibana"
spec:
  type: NodePort
  ports:
  - port: 5601
    protocol: TCP
    targetPort: ui
    nodePort: 31336
  selector:
    k8s-app: kibana-logging
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: logs-ingress
#   namespace: elk-logger
#   labels:
#     app: logs
#   annotations:
#     kubernetes.io/ingress.class: traefik
# spec:
#   rules:
#   - host: logs.example.com
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: kibana-logging
#           servicePort: 5601
